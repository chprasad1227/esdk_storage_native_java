/**
 * Generated by Agitar build: AgitarOne Version 6.0.0.000018 (Build date: Sep 06, 2013) [6.0.0.000018]
 * JDK Version: 1.6.0_14
 *
 * Generated on 2014-3-11 13:36:55
 * Time to generate: 00:16.547 seconds
 *
 *
 * agitar.src.md5=com.huawei.ism.openapi.nas.nfsshare.NFSShareMO:3370e56a58c249266ef04b457b1679da
 *
 */

package com.huawei.ism.openapi.nas.nfsshare;

import com.agitar.lib.junit.AgitarTestCase;
import com.agitar.lib.mockingbird.Mockingbird;
import com.google.gson.Gson;
import com.google.gson.JsonSyntaxException;
import com.huawei.ism.openapi.common.model.MO;
import org.json.JSONObject;

public class NFSShareMOAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return NFSShareMO.class;
    }
    
    public void testConstructor() throws Throwable {
        MO mo = new MO();
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testConstructor1() throws Throwable {
        NFSShareMO nFSShareMO = new NFSShareMO();
        assertEquals("nFSShareMO.getMO().getProperties().size()", 0, nFSShareMO.getMO().getProperties().size());
    }
    
    public void testConstructor2() throws Throwable {
        JSONObject jObject = new JSONObject();
        jObject.put("testNFSShareMOKey", true);
        NFSShareMO nFSShareMO = new NFSShareMO(jObject);
        assertEquals("nFSShareMO.getMO().getProperties().size()", 1, nFSShareMO.getMO().getProperties().size());
    }
    
    public void testGetCount() throws Throwable {
        MO mo = new MO();
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        Long result = nFSShareMO.getCount();
        assertEquals("result", Long.MIN_VALUE, result.longValue());
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testGetDescription() throws Throwable {
        MO mo = new MO();
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        String result = nFSShareMO.getDescription();
        assertNull("result", result);
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testGetDescription1() throws Throwable {
        MO mo = new MO();
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        nFSShareMO.setDescription("testNFSShareMODescription");
        String result = nFSShareMO.getDescription();
        assertEquals("result", "testNFSShareMODescription", result);
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testGetFsId() throws Throwable {
        MO mo = new MO();
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        String result = nFSShareMO.getFsId();
        assertNull("result", result);
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testGetFsId1() throws Throwable {
        MO mo = new MO();
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        nFSShareMO.setFsId("testNFSShareMOFsId");
        String result = nFSShareMO.getFsId();
        assertEquals("result", "testNFSShareMOFsId", result);
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testGetId() throws Throwable {
        MO mo = new MO();
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        String result = nFSShareMO.getId();
        assertNull("result", result);
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testGetId1() throws Throwable {
        MO mo = (MO) Mockingbird.getProxyObject(MO.class);
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        Mockingbird.enterRecordingMode();
        Mockingbird.setReturnValue(mo.getStrProperty("ID"), "");
        Mockingbird.enterTestMode(NFSShareMO.class);
        String result = nFSShareMO.getId();
        assertEquals("result", "", result);
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testGetMO() throws Throwable {
        MO mo = new MO();
        MO result = new NFSShareMO(mo).getMO();
        assertSame("result", mo, result);
    }
    
    public void testGetSharePath() throws Throwable {
        MO mo = new MO();
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        String result = nFSShareMO.getSharePath();
        assertNull("result", result);
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testGetSharePath1() throws Throwable {
        MO mo = (MO) Mockingbird.getProxyObject(MO.class);
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        Mockingbird.enterRecordingMode();
        Mockingbird.setReturnValue(mo.getStrProperty("SHAREPATH"), "testString");
        Mockingbird.enterTestMode(NFSShareMO.class);
        String result = nFSShareMO.getSharePath();
        assertEquals("result", "testString", result);
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testGetTenancyId() throws Throwable {
        MO mo = new MO();
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        Long result = nFSShareMO.getTenancyId();
        assertEquals("result", Long.MIN_VALUE, result.longValue());
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testGetTenancyId1() throws Throwable {
        MO mo = (MO) Mockingbird.getProxyObject(MO.class);
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        Mockingbird.enterRecordingMode();
        Mockingbird.setReturnValue(mo.getLongProperty("TENANCYID"), 0L);
        Long long2 = new Long(0L);
        Mockingbird.setReturnValue(true, Long.class, "valueOf", "(long)java.lang.Long", new Object[] {new Long(0L)}, long2, 1);
        Mockingbird.enterTestMode(NFSShareMO.class);
        Long result = nFSShareMO.getTenancyId();
        assertSame("result", long2, result);
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testSetDescription() throws Throwable {
        MO mo = new MO();
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        nFSShareMO.setDescription("testNFSShareMODescription");
        assertEquals("nFSShareMO.getMO().getProperties().size()", 1, nFSShareMO.getMO().getProperties().size());
        assertEquals("nFSShareMO.getMO().getProperties().get(\"DESCRIPTION\")", "testNFSShareMODescription", nFSShareMO.getMO().getProperties().get("DESCRIPTION"));
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testSetFsId() throws Throwable {
        MO mo = new MO();
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        nFSShareMO.setFsId("testNFSShareMOFsId");
        assertEquals("nFSShareMO.getMO().getProperties().size()", 1, nFSShareMO.getMO().getProperties().size());
        assertEquals("nFSShareMO.getMO().getProperties().get(\"FSID\")", "testNFSShareMOFsId", nFSShareMO.getMO().getProperties().get("FSID"));
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testSetId() throws Throwable {
        MO mo = new MO();
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        nFSShareMO.setId("testNFSShareMOId");
        assertEquals("nFSShareMO.getMO().getProperties().size()", 1, nFSShareMO.getMO().getProperties().size());
        assertEquals("nFSShareMO.getMO().getProperties().get(\"ID\")", "testNFSShareMOId", nFSShareMO.getMO().getProperties().get("ID"));
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testSetSharePath() throws Throwable {
        MO mo = new MO();
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        nFSShareMO.setSharePath("testNFSShareMOSharePath");
        assertEquals("nFSShareMO.getMO().getProperties().size()", 1, nFSShareMO.getMO().getProperties().size());
        assertEquals("nFSShareMO.getMO().getProperties().get(\"SHAREPATH\")", "testNFSShareMOSharePath", nFSShareMO.getMO().getProperties().get("SHAREPATH"));
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testSetTenancyId() throws Throwable {
        MO mo = new MO();
        NFSShareMO nFSShareMO = new NFSShareMO(mo);
        nFSShareMO.setTenancyId(new Long(0L));
        assertEquals("nFSShareMO.getMO().getProperties().size()", 1, nFSShareMO.getMO().getProperties().size());
        assertEquals("nFSShareMO.getMO().getProperties().get(\"TENANCYID\")", new Long(0L), nFSShareMO.getMO().getProperties().get("TENANCYID"));
        assertSame("nFSShareMO.getMO()", mo, nFSShareMO.getMO());
    }
    
    public void testConstructorThrowsJsonSyntaxException() throws Throwable {
        JSONObject jObject = new JSONObject();
        jObject.put("testString", 100L);
        jObject.accumulate("testString", new Integer(0));
        try {
            new NFSShareMO(jObject);
            fail("Expected JsonSyntaxException to be thrown");
        } catch (JsonSyntaxException ex) {
            assertEquals("ex.getMessage()", "java.lang.IllegalStateException: Expected a string but was BEGIN_ARRAY at line 1 column 16", ex.getMessage());
            assertThrownBy(Gson.class, ex);
        }
    }
    
    public void testGetCountThrowsNullPointerException() throws Throwable {
        NFSShareMO nFSShareMO = new NFSShareMO((MO) null);
        try {
            nFSShareMO.getCount();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(NFSShareMO.class, ex);
            assertNull("nFSShareMO.getMO()", nFSShareMO.getMO());
        }
    }
    
    public void testGetDescriptionThrowsNullPointerException() throws Throwable {
        NFSShareMO nFSShareMO = new NFSShareMO((MO) null);
        try {
            nFSShareMO.getDescription();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(NFSShareMO.class, ex);
            assertNull("nFSShareMO.getMO()", nFSShareMO.getMO());
        }
    }
    
    public void testGetFsIdThrowsNullPointerException() throws Throwable {
        NFSShareMO nFSShareMO = new NFSShareMO((MO) null);
        try {
            nFSShareMO.getFsId();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(NFSShareMO.class, ex);
            assertNull("nFSShareMO.getMO()", nFSShareMO.getMO());
        }
    }
    
    public void testGetIdThrowsNullPointerException() throws Throwable {
        NFSShareMO nFSShareMO = new NFSShareMO((MO) null);
        try {
            nFSShareMO.getId();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(NFSShareMO.class, ex);
            assertNull("nFSShareMO.getMO()", nFSShareMO.getMO());
        }
    }
    
    public void testGetSharePathThrowsNullPointerException() throws Throwable {
        NFSShareMO nFSShareMO = new NFSShareMO((MO) null);
        try {
            nFSShareMO.getSharePath();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(NFSShareMO.class, ex);
            assertNull("nFSShareMO.getMO()", nFSShareMO.getMO());
        }
    }
    
    public void testGetTenancyIdThrowsNullPointerException() throws Throwable {
        NFSShareMO nFSShareMO = new NFSShareMO((MO) null);
        try {
            nFSShareMO.getTenancyId();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(NFSShareMO.class, ex);
            assertNull("nFSShareMO.getMO()", nFSShareMO.getMO());
        }
    }
    
    public void testSetDescriptionThrowsNullPointerException() throws Throwable {
        NFSShareMO nFSShareMO = new NFSShareMO((MO) null);
        try {
            nFSShareMO.setDescription("testNFSShareMODescription");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(NFSShareMO.class, ex);
            assertNull("nFSShareMO.getMO()", nFSShareMO.getMO());
        }
    }
    
    public void testSetFsIdThrowsNullPointerException() throws Throwable {
        NFSShareMO nFSShareMO = new NFSShareMO((MO) null);
        try {
            nFSShareMO.setFsId("testNFSShareMOFsId");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(NFSShareMO.class, ex);
            assertNull("nFSShareMO.getMO()", nFSShareMO.getMO());
        }
    }
    
    public void testSetIdThrowsNullPointerException() throws Throwable {
        NFSShareMO nFSShareMO = new NFSShareMO((MO) null);
        try {
            nFSShareMO.setId("testNFSShareMOId");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(NFSShareMO.class, ex);
            assertNull("nFSShareMO.getMO()", nFSShareMO.getMO());
        }
    }
    
    public void testSetSharePathThrowsNullPointerException() throws Throwable {
        NFSShareMO nFSShareMO = new NFSShareMO((MO) null);
        try {
            nFSShareMO.setSharePath("testNFSShareMOSharePath");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(NFSShareMO.class, ex);
            assertNull("nFSShareMO.getMO()", nFSShareMO.getMO());
        }
    }
    
    public void testSetTenancyIdThrowsNullPointerException() throws Throwable {
        NFSShareMO nFSShareMO = new NFSShareMO((MO) null);
        try {
            nFSShareMO.setTenancyId(new Long(0L));
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(NFSShareMO.class, ex);
            assertNull("nFSShareMO.getMO()", nFSShareMO.getMO());
        }
    }
}

