/**
 * Generated by Agitar build: AgitarOne Version 6.0.0.000018 (Build date: Sep 06, 2013) [6.0.0.000018]
 * JDK Version: 1.6.0_14
 *
 * Generated on 2014-3-11 13:33:54
 * Time to generate: 00:22.640 seconds
 *
 *
 * agitar.src.md5=com.huawei.ism.openapi.nas.ldapfield.LDAPFieldMO:5a87071f6796810b575091c6eb9260cd
 *
 */

package com.huawei.ism.openapi.nas.ldapfield;

import com.agitar.lib.junit.AgitarTestCase;
import com.agitar.lib.mockingbird.Mockingbird;
import com.huawei.ism.openapi.common.keydeifines.EnumDefine;
import com.huawei.ism.openapi.common.model.MO;
import org.json.JSONObject;

public class LDAPFieldMOAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return LDAPFieldMO.class;
    }
    
    public void testConstructor() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO();
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 0, lDAPFieldMO.getMO().getProperties().size());
    }
    
    public void testConstructor1() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(new JSONObject());
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 0, lDAPFieldMO.getMO().getProperties().size());
    }
    
    public void testConstructor2() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetBasedn() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO();
        lDAPFieldMO.setBasedn("testLDAPFieldMOBasedn");
        String result = lDAPFieldMO.getBasedn();
        assertEquals("result", "testLDAPFieldMOBasedn", result);
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 1, lDAPFieldMO.getMO().getProperties().size());
    }
    
    public void testGetBasedn1() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        String result = lDAPFieldMO.getBasedn();
        assertNull("result", result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetGroupsuffix() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        String result = lDAPFieldMO.getGroupsuffix();
        assertNull("result", result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetGroupsuffix1() throws Throwable {
        MO mo = new MO(new JSONObject());
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        lDAPFieldMO.setGroupsuffix("testLDAPFieldMOGroupSuffix");
        String result = lDAPFieldMO.getGroupsuffix();
        assertEquals("result", "testLDAPFieldMOGroupSuffix", result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetLdapserver() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        String result = lDAPFieldMO.getLdapserver();
        assertNull("result", result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetLdapserver1() throws Throwable {
        MO mo = (MO) Mockingbird.getProxyObject(MO.class);
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        Mockingbird.enterRecordingMode();
        Mockingbird.setReturnValue(mo.getStrProperty("LDAPSERVER"), "testString");
        Mockingbird.enterTestMode(LDAPFieldMO.class);
        String result = lDAPFieldMO.getLdapserver();
        assertEquals("result", "testString", result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetMO() throws Throwable {
        MO mo = new MO();
        MO result = new LDAPFieldMO(mo).getMO();
        assertSame("result", mo, result);
    }
    
    public void testGetPassword() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        String result = lDAPFieldMO.getPassword();
        assertNull("result", result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetPassword1() throws Throwable {
        MO mo = (MO) Mockingbird.getProxyObject(MO.class);
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        Mockingbird.enterRecordingMode();
        Mockingbird.setReturnValue(mo.getStrProperty("PASSWORD"), "LDpPSERVER");
        Mockingbird.enterTestMode(LDAPFieldMO.class);
        String result = lDAPFieldMO.getPassword();
        assertEquals("result", "LDpPSERVER", result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetPasswordHash() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        lDAPFieldMO.setPasswordHash(EnumDefine.PasswordHashE.CLEAR);
        EnumDefine.PasswordHashE result = lDAPFieldMO.getPasswordHash();
        assertSame("result", EnumDefine.PasswordHashE.CLEAR, result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetPortnum() throws Throwable {
        MO mo = (MO) Mockingbird.getProxyObject(MO.class);
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        Mockingbird.enterRecordingMode();
        Mockingbird.setReturnValue(mo.getLongProperty("PORTNUM"), 0L);
        Long long2 = new Long(0L);
        Mockingbird.setReturnValue(true, Long.class, "valueOf", "(long)java.lang.Long", new Object[] {new Long(0L)}, long2, 1);
        Mockingbird.enterTestMode(LDAPFieldMO.class);
        Long result = lDAPFieldMO.getPortnum();
        assertSame("result", long2, result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetPortnum1() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        Long result = lDAPFieldMO.getPortnum();
        assertEquals("result", Long.MIN_VALUE, result.longValue());
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetShadowSuffix() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        String result = lDAPFieldMO.getShadowSuffix();
        assertNull("result", result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetShadowSuffix1() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        lDAPFieldMO.setShadowSuffix("testLDAPFieldMOShadowSuffix");
        String result = lDAPFieldMO.getShadowSuffix();
        assertEquals("result", "testLDAPFieldMOShadowSuffix", result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetTenancyId() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        Long result = lDAPFieldMO.getTenancyId();
        assertEquals("result", Long.MIN_VALUE, result.longValue());
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetTenancyId1() throws Throwable {
        MO mo = (MO) Mockingbird.getProxyObject(MO.class);
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        Mockingbird.enterRecordingMode();
        Mockingbird.setReturnValue(mo.getLongProperty("TENANCYID"), 0L);
        Long long2 = new Long(0L);
        Mockingbird.setReturnValue(true, Long.class, "valueOf", "(long)java.lang.Long", new Object[] {new Long(0L)}, long2, 1);
        Mockingbird.enterTestMode(LDAPFieldMO.class);
        Long result = lDAPFieldMO.getTenancyId();
        assertSame("result", long2, result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetTransferType() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        lDAPFieldMO.setTransferType(EnumDefine.LdapTransferE.LDAPS);
        EnumDefine.LdapTransferE result = lDAPFieldMO.getTransferType();
        assertSame("result", EnumDefine.LdapTransferE.LDAPS, result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetUserName() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        String result = lDAPFieldMO.getUserName();
        assertNull("result", result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetUserName1() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        lDAPFieldMO.setUserName("testLDAPFieldMOUserName");
        String result = lDAPFieldMO.getUserName();
        assertEquals("result", "testLDAPFieldMOUserName", result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetUserSuffix() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        String result = lDAPFieldMO.getUserSuffix();
        assertNull("result", result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetUserSuffix1() throws Throwable {
        MO mo = (MO) Mockingbird.getProxyObject(MO.class);
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        Mockingbird.enterRecordingMode();
        Mockingbird.setReturnValue(mo.getStrProperty("USERSUFFIX"), "testString");
        Mockingbird.enterTestMode(LDAPFieldMO.class);
        String result = lDAPFieldMO.getUserSuffix();
        assertEquals("result", "testString", result);
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testSetBasedn() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        lDAPFieldMO.setBasedn("testLDAPFieldMOBasedn");
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 1, lDAPFieldMO.getMO().getProperties().size());
        assertEquals("lDAPFieldMO.getMO().getProperties().get(\"BASEDN\")", "testLDAPFieldMOBasedn", lDAPFieldMO.getMO().getProperties().get("BASEDN"));
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testSetGroupsuffix() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        lDAPFieldMO.setGroupsuffix("testLDAPFieldMOGroupSuffix");
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 1, lDAPFieldMO.getMO().getProperties().size());
        assertEquals("lDAPFieldMO.getMO().getProperties().get(\"GROUPSUFFIX\")", "testLDAPFieldMOGroupSuffix", lDAPFieldMO.getMO().getProperties().get("GROUPSUFFIX"));
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testSetLdapserver() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        lDAPFieldMO.setLdapserver("testLDAPFieldMOLdapserver");
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 1, lDAPFieldMO.getMO().getProperties().size());
        assertEquals("lDAPFieldMO.getMO().getProperties().get(\"LDAPSERVER\")", "testLDAPFieldMOLdapserver", lDAPFieldMO.getMO().getProperties().get("LDAPSERVER"));
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testSetPassword() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        lDAPFieldMO.setPassword("testLDAPFieldMOPassword");
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 1, lDAPFieldMO.getMO().getProperties().size());
        assertEquals("lDAPFieldMO.getMO().getProperties().get(\"PASSWORD\")", "testLDAPFieldMOPassword", lDAPFieldMO.getMO().getProperties().get("PASSWORD"));
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testSetPasswordHash() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        lDAPFieldMO.setPasswordHash(EnumDefine.PasswordHashE.MD5);
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 1, lDAPFieldMO.getMO().getProperties().size());
        assertEquals("lDAPFieldMO.getMO().getProperties().get(\"PASSWORDHASH\")", new Integer(2), lDAPFieldMO.getMO().getProperties().get("PASSWORDHASH"));
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testSetPortnum() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO();
        lDAPFieldMO.setPortnum(new Long(0L));
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 1, lDAPFieldMO.getMO().getProperties().size());
        assertEquals("lDAPFieldMO.getMO().getProperties().get(\"PORTNUM\")", new Long(0L), lDAPFieldMO.getMO().getProperties().get("PORTNUM"));
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 1, lDAPFieldMO.getMO().getProperties().size());
    }
    
    public void testSetShadowSuffix() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        lDAPFieldMO.setShadowSuffix("testLDAPFieldMOShadowSuffix");
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 1, lDAPFieldMO.getMO().getProperties().size());
        assertEquals("lDAPFieldMO.getMO().getProperties().get(\"SHADOWSUFFIX\")", "testLDAPFieldMOShadowSuffix", lDAPFieldMO.getMO().getProperties().get("SHADOWSUFFIX"));
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testSetTenancyId() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO();
        lDAPFieldMO.setTenancyId(new Long(0L));
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 1, lDAPFieldMO.getMO().getProperties().size());
        assertEquals("lDAPFieldMO.getMO().getProperties().get(\"TENANCYID\")", new Long(0L), lDAPFieldMO.getMO().getProperties().get("TENANCYID"));
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 1, lDAPFieldMO.getMO().getProperties().size());
    }
    
    public void testSetTransferType() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        lDAPFieldMO.setTransferType(EnumDefine.LdapTransferE.LDAPS);
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 1, lDAPFieldMO.getMO().getProperties().size());
        assertEquals("lDAPFieldMO.getMO().getProperties().get(\"TRANSFERTYPE\")", new Integer(2), lDAPFieldMO.getMO().getProperties().get("TRANSFERTYPE"));
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testSetUserName() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        lDAPFieldMO.setUserName("testLDAPFieldMOUserName");
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 1, lDAPFieldMO.getMO().getProperties().size());
        assertEquals("lDAPFieldMO.getMO().getProperties().get(\"USERNAME\")", "testLDAPFieldMOUserName", lDAPFieldMO.getMO().getProperties().get("USERNAME"));
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testSetUserSuffix() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        lDAPFieldMO.setUserSuffix("testLDAPFieldMOUserSuffix");
        assertEquals("lDAPFieldMO.getMO().getProperties().size()", 1, lDAPFieldMO.getMO().getProperties().size());
        assertEquals("lDAPFieldMO.getMO().getProperties().get(\"USERSUFFIX\")", "testLDAPFieldMOUserSuffix", lDAPFieldMO.getMO().getProperties().get("USERSUFFIX"));
        assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
    }
    
    public void testGetBasednThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.getBasedn();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testGetGroupsuffixThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.getGroupsuffix();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testGetLdapserverThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.getLdapserver();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testGetPasswordHashThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.getPasswordHash();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testGetPasswordHashThrowsNumberFormatException() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        try {
            lDAPFieldMO.getPasswordHash();
            fail("Expected NumberFormatException to be thrown");
        } catch (NumberFormatException ex) {
            assertEquals("ex.getMessage()", "null", ex.getMessage());
            assertThrownBy(Integer.class, ex);
            assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
        }
    }
    
    public void testGetPasswordThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.getPassword();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testGetPortnumThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.getPortnum();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testGetShadowSuffixThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.getShadowSuffix();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testGetTenancyIdThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.getTenancyId();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testGetTransferTypeThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.getTransferType();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testGetTransferTypeThrowsNumberFormatException() throws Throwable {
        MO mo = new MO();
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO(mo);
        try {
            lDAPFieldMO.getTransferType();
            fail("Expected NumberFormatException to be thrown");
        } catch (NumberFormatException ex) {
            assertEquals("ex.getMessage()", "null", ex.getMessage());
            assertThrownBy(Integer.class, ex);
            assertSame("lDAPFieldMO.getMO()", mo, lDAPFieldMO.getMO());
        }
    }
    
    public void testGetUserNameThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.getUserName();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testGetUserSuffixThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.getUserSuffix();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testSetBasednThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.setBasedn("testLDAPFieldMOBasedn");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testSetGroupsuffixThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.setGroupsuffix("testLDAPFieldMOGroupSuffix");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testSetLdapserverThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.setLdapserver("testLDAPFieldMOLdapserver");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testSetPasswordHashThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.setPasswordHash(EnumDefine.PasswordHashE.CLEAR);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testSetPasswordThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.setPassword("testLDAPFieldMOPassword");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testSetPortnumThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.setPortnum(new Long(100L));
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testSetShadowSuffixThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.setShadowSuffix("testLDAPFieldMOShadowSuffix");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testSetTenancyIdThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.setTenancyId(new Long(100L));
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testSetTransferTypeThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.setTransferType(EnumDefine.LdapTransferE.LDAP);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testSetUserNameThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.setUserName("testLDAPFieldMOUserName");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
    
    public void testSetUserSuffixThrowsNullPointerException() throws Throwable {
        LDAPFieldMO lDAPFieldMO = new LDAPFieldMO((MO) null);
        try {
            lDAPFieldMO.setUserSuffix("testLDAPFieldMOUserSuffix");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LDAPFieldMO.class, ex);
            assertNull("lDAPFieldMO.getMO()", lDAPFieldMO.getMO());
        }
    }
}

