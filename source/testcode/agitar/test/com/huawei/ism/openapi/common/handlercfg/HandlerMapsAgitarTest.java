/**
 * Generated by Agitar build: AgitarOne Version 6.0.0.000018 (Build date: Sep 06, 2013) [6.0.0.000018]
 * JDK Version: 1.6.0_14
 *
 * Generated on 2014-3-11 13:31:32
 * Time to generate: 00:16.953 seconds
 *
 *
 * agitar.src.md5=com.huawei.ism.openapi.common.handlercfg.HandlerMaps:8e84f700d0145586f1f6bcda7586ac8d
 *
 */

package com.huawei.ism.openapi.common.handlercfg;

import com.agitar.lib.junit.AgitarTestCase;
import com.agitar.lib.mockingbird.Mockingbird;
import com.huawei.ism.openapi.nas.filesystem.FileSystemHandlerImpl;
import java.util.Map;

public class HandlerMapsAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return HandlerMaps.class;
    }
    
    public void testConstructor() throws Throwable {
        new HandlerMaps();
        assertTrue("Test call resulted in expected outcome", true);
    }
    
    public void testGetHandlerMapsInstance() throws Throwable {
        HandlerMaps result = HandlerMaps.getHandlerMapsInstance();
        assertNotNull("result", result);
    }
    
    public void testGetHandlerMapsInstance1() throws Throwable {
        storeStaticField(HandlerMaps.class, "handlerMapsInstanceHandlerMaps");
        Mockingbird.enterRecordingMode();
        Mockingbird.replaceObjectForRecording(HandlerMaps.class, "<init>()", new HandlerMaps());
        setPrivateField(HandlerMaps.class, "handlerMapsInstanceHandlerMaps", null);
        Mockingbird.enterTestMode(HandlerMaps.class);
        HandlerMaps result = HandlerMaps.getHandlerMapsInstance();
        assertNotNull("result", result);
        assertNotNull("HandlerMaps.handlerMapsInstanceHandlerMaps", getPrivateField(HandlerMaps.class, "handlerMapsInstanceHandlerMaps"));
    }
    
    public void testGetValue() throws Throwable {
        HandlerMaps handlerMaps = new HandlerMaps();
        Class result = handlerMaps.getValue("FileSystemHandler");
        assertEquals("result", FileSystemHandlerImpl.class, result);
        assertEquals("handlerMapsHandlerMaps.handlerMap.size()", 28, ((Map) getPrivateField(HandlerMaps.class, "handlerMap")).size());
    }
    
    public void testGetValue1() throws Throwable {
        HandlerMaps handlerMaps = new HandlerMaps();
        Class result = handlerMaps.getValue("testHandlerMapsKey");
        assertNull("result", result);
        assertEquals("handlerMapsHandlerMaps.handlerMap.size()", 28, ((Map) getPrivateField(HandlerMaps.class, "handlerMap")).size());
    }
    
    public void testInitHandlerMap() throws Throwable {
        callPrivateMethod("com.huawei.ism.openapi.common.handlercfg.HandlerMaps", "initHandlerMap", new Class[] {}, null, new Object[] {});
        assertEquals("HandlerMaps.handlerMap.size()", 28, ((Map) getPrivateField(HandlerMaps.class, "handlerMap")).size());
    }
}

