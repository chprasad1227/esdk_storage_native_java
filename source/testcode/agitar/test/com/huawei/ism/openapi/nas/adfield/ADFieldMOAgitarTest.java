/**
 * Generated by Agitar build: AgitarOne Version 6.0.0.000018 (Build date: Sep 06, 2013) [6.0.0.000018]
 * JDK Version: 1.6.0_14
 *
 * Generated on 2014-3-11 13:25:22
 * Time to generate: 00:16.328 seconds
 *
 *
 * agitar.src.md5=com.huawei.ism.openapi.nas.adfield.ADFieldMO:58372b80bf3e71ff9b740e11771e3ece
 *
 */

package com.huawei.ism.openapi.nas.adfield;

import com.agitar.lib.junit.AgitarTestCase;
import com.agitar.lib.mockingbird.Mockingbird;
import com.google.gson.Gson;
import com.google.gson.JsonSyntaxException;
import com.huawei.ism.openapi.common.model.MO;
import org.json.JSONObject;

public class ADFieldMOAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return ADFieldMO.class;
    }
    
    public void testConstructor() throws Throwable {
        MO mo = new MO();
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testConstructor1() throws Throwable {
        ADFieldMO aDFieldMO = new ADFieldMO();
        assertEquals("aDFieldMO.getMO().getProperties().size()", 0, aDFieldMO.getMO().getProperties().size());
    }
    
    public void testConstructor2() throws Throwable {
        ADFieldMO aDFieldMO = new ADFieldMO(new JSONObject());
        assertEquals("aDFieldMO.getMO().getProperties().size()", 0, aDFieldMO.getMO().getProperties().size());
    }
    
    public void testGetAdminName() throws Throwable {
        JSONObject jObject = new JSONObject();
        jObject.put("testADFieldMOKey", 100.0);
        ADFieldMO aDFieldMO = new ADFieldMO(jObject);
        aDFieldMO.setAdminName("testADFieldMOAdminName");
        String result = aDFieldMO.getAdminName();
        assertEquals("result", "testADFieldMOAdminName", result);
        assertEquals("aDFieldMO.getMO().getProperties().size()", 2, aDFieldMO.getMO().getProperties().size());
    }
    
    public void testGetAdminName1() throws Throwable {
        MO mo = new MO();
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        String result = aDFieldMO.getAdminName();
        assertNull("result", result);
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testGetAdminPwd() throws Throwable {
        MO mo = new MO();
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        aDFieldMO.setadminPwd("testADFieldMOAdminPwd");
        String result = aDFieldMO.getAdminPwd();
        assertEquals("result", "testADFieldMOAdminPwd", result);
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testGetAdminPwd1() throws Throwable {
        MO mo = new MO();
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        String result = aDFieldMO.getAdminPwd();
        assertNull("result", result);
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testGetFullDomainName() throws Throwable {
        MO mo = new MO();
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        String result = aDFieldMO.getFullDomainName();
        assertNull("result", result);
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testGetFullDomainName1() throws Throwable {
        MO mo = (MO) Mockingbird.getProxyObject(MO.class);
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        Mockingbird.enterRecordingMode();
        Mockingbird.setReturnValue(mo.getStrProperty("FULLDOMAINNAME"), "");
        Mockingbird.enterTestMode(ADFieldMO.class);
        String result = aDFieldMO.getFullDomainName();
        assertEquals("result", "", result);
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testGetJoined() throws Throwable {
        MO mo = new MO();
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        Boolean result = aDFieldMO.getJoined();
        assertFalse("result", result.booleanValue());
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testGetJoined1() throws Throwable {
        MO mo = (MO) Mockingbird.getProxyObject(MO.class);
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        Mockingbird.enterRecordingMode();
        Boolean boolean2 = Boolean.TRUE;
        Mockingbird.setReturnValue(mo.getBoolProperty("JOINED"), boolean2);
        Mockingbird.enterTestMode(ADFieldMO.class);
        Boolean result = aDFieldMO.getJoined();
        assertSame("result", boolean2, result);
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testGetMO() throws Throwable {
        MO mo = new MO();
        MO result = new ADFieldMO(mo).getMO();
        assertSame("result", mo, result);
    }
    
    public void testGetTenancyId() throws Throwable {
        MO mo = new MO();
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        Long result = aDFieldMO.getTenancyId();
        assertEquals("result", Long.MIN_VALUE, result.longValue());
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testGetTenancyId1() throws Throwable {
        MO mo = (MO) Mockingbird.getProxyObject(MO.class);
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        Mockingbird.enterRecordingMode();
        Mockingbird.setReturnValue(mo.getLongProperty("TENANCYID"), 0L);
        Long long2 = new Long(0L);
        Mockingbird.setReturnValue(true, Long.class, "valueOf", "(long)java.lang.Long", new Object[] {new Long(0L)}, long2, 1);
        Mockingbird.enterTestMode(ADFieldMO.class);
        Long result = aDFieldMO.getTenancyId();
        assertSame("result", long2, result);
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testSetAdminName() throws Throwable {
        MO mo = new MO();
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        aDFieldMO.setAdminName("testADFieldMOAdminName");
        assertEquals("aDFieldMO.getMO().getProperties().size()", 1, aDFieldMO.getMO().getProperties().size());
        assertEquals("aDFieldMO.getMO().getProperties().get(\"ADMINNAME\")", "testADFieldMOAdminName", aDFieldMO.getMO().getProperties().get("ADMINNAME"));
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testSetFullDomainName() throws Throwable {
        MO mo = new MO();
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        aDFieldMO.setFullDomainName("testADFieldMOFullDomainName");
        assertEquals("aDFieldMO.getMO().getProperties().size()", 1, aDFieldMO.getMO().getProperties().size());
        assertEquals("aDFieldMO.getMO().getProperties().get(\"FULLDOMAINNAME\")", "testADFieldMOFullDomainName", aDFieldMO.getMO().getProperties().get("FULLDOMAINNAME"));
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testSetJoined() throws Throwable {
        MO mo = new MO();
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        aDFieldMO.setJoined(Boolean.FALSE);
        assertEquals("aDFieldMO.getMO().getProperties().size()", 1, aDFieldMO.getMO().getProperties().size());
        assertEquals("aDFieldMO.getMO().getProperties().get(\"JOINED\")", Boolean.FALSE, aDFieldMO.getMO().getProperties().get("JOINED"));
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testSetTenancyId() throws Throwable {
        MO mo = new MO();
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        aDFieldMO.setTenancyId(new Long(0L));
        assertEquals("aDFieldMO.getMO().getProperties().size()", 1, aDFieldMO.getMO().getProperties().size());
        assertEquals("aDFieldMO.getMO().getProperties().get(\"TENANCYID\")", new Long(0L), aDFieldMO.getMO().getProperties().get("TENANCYID"));
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testSetadminPwd() throws Throwable {
        MO mo = new MO();
        ADFieldMO aDFieldMO = new ADFieldMO(mo);
        aDFieldMO.setadminPwd("testADFieldMOAdminPwd");
        assertEquals("aDFieldMO.getMO().getProperties().size()", 1, aDFieldMO.getMO().getProperties().size());
        assertEquals("aDFieldMO.getMO().getProperties().get(\"ADMINPWD\")", "testADFieldMOAdminPwd", aDFieldMO.getMO().getProperties().get("ADMINPWD"));
        assertSame("aDFieldMO.getMO()", mo, aDFieldMO.getMO());
    }
    
    public void testConstructorThrowsJsonSyntaxException() throws Throwable {
        JSONObject jObject = new JSONObject();
        jObject.put("testString", 100);
        jObject.accumulate("testString", " 2");
        try {
            new ADFieldMO(jObject);
            fail("Expected JsonSyntaxException to be thrown");
        } catch (JsonSyntaxException ex) {
            assertEquals("ex.getMessage()", "java.lang.IllegalStateException: Expected a string but was BEGIN_ARRAY at line 1 column 16", ex.getMessage());
            assertThrownBy(Gson.class, ex);
        }
    }
    
    public void testGetAdminNameThrowsNullPointerException() throws Throwable {
        ADFieldMO aDFieldMO = new ADFieldMO((MO) null);
        try {
            aDFieldMO.getAdminName();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(ADFieldMO.class, ex);
            assertNull("aDFieldMO.getMO()", aDFieldMO.getMO());
        }
    }
    
    public void testGetAdminPwdThrowsNullPointerException() throws Throwable {
        ADFieldMO aDFieldMO = new ADFieldMO((MO) null);
        try {
            aDFieldMO.getAdminPwd();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(ADFieldMO.class, ex);
            assertNull("aDFieldMO.getMO()", aDFieldMO.getMO());
        }
    }
    
    public void testGetFullDomainNameThrowsNullPointerException() throws Throwable {
        ADFieldMO aDFieldMO = new ADFieldMO((MO) null);
        try {
            aDFieldMO.getFullDomainName();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(ADFieldMO.class, ex);
            assertNull("aDFieldMO.getMO()", aDFieldMO.getMO());
        }
    }
    
    public void testGetJoinedThrowsNullPointerException() throws Throwable {
        ADFieldMO aDFieldMO = new ADFieldMO((MO) null);
        try {
            aDFieldMO.getJoined();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(ADFieldMO.class, ex);
            assertNull("aDFieldMO.getMO()", aDFieldMO.getMO());
        }
    }
    
    public void testGetTenancyIdThrowsNullPointerException() throws Throwable {
        ADFieldMO aDFieldMO = new ADFieldMO((MO) null);
        try {
            aDFieldMO.getTenancyId();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(ADFieldMO.class, ex);
            assertNull("aDFieldMO.getMO()", aDFieldMO.getMO());
        }
    }
    
    public void testSetAdminNameThrowsNullPointerException() throws Throwable {
        ADFieldMO aDFieldMO = new ADFieldMO((MO) null);
        try {
            aDFieldMO.setAdminName("testADFieldMOAdminName");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(ADFieldMO.class, ex);
            assertNull("aDFieldMO.getMO()", aDFieldMO.getMO());
        }
    }
    
    public void testSetFullDomainNameThrowsNullPointerException() throws Throwable {
        ADFieldMO aDFieldMO = new ADFieldMO((MO) null);
        try {
            aDFieldMO.setFullDomainName("testADFieldMOFullDomainName");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(ADFieldMO.class, ex);
            assertNull("aDFieldMO.getMO()", aDFieldMO.getMO());
        }
    }
    
    public void testSetJoinedThrowsNullPointerException() throws Throwable {
        ADFieldMO aDFieldMO = new ADFieldMO((MO) null);
        try {
            aDFieldMO.setJoined(Boolean.FALSE);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(ADFieldMO.class, ex);
            assertNull("aDFieldMO.getMO()", aDFieldMO.getMO());
        }
    }
    
    public void testSetTenancyIdThrowsNullPointerException() throws Throwable {
        ADFieldMO aDFieldMO = new ADFieldMO((MO) null);
        try {
            aDFieldMO.setTenancyId(new Long(100L));
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(ADFieldMO.class, ex);
            assertNull("aDFieldMO.getMO()", aDFieldMO.getMO());
        }
    }
    
    public void testSetadminPwdThrowsNullPointerException() throws Throwable {
        ADFieldMO aDFieldMO = new ADFieldMO((MO) null);
        try {
            aDFieldMO.setadminPwd("testADFieldMOAdminPwd");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(ADFieldMO.class, ex);
            assertNull("aDFieldMO.getMO()", aDFieldMO.getMO());
        }
    }
}

