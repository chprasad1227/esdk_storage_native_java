/**
 * Generated by Agitar build: AgitarOne Version 6.0.0.000018 (Build date: Sep 06, 2013) [6.0.0.000018]
 * JDK Version: 1.6.0_14
 *
 * Generated on 2014-3-11 13:38:01
 * Time to generate: 00:14.563 seconds
 *
 *
 * agitar.src.md5=com.huawei.ism.openapi.fcinitiator.system.performance.PerformanceStatisticSwitchMO:c90a829b26f447fcd0709f3b89ac7fdd
 *
 */

package com.huawei.ism.openapi.fcinitiator.system.performance;

import com.agitar.lib.junit.AgitarTestCase;
import com.agitar.lib.mockingbird.Mockingbird;
import com.huawei.ism.openapi.common.model.MO;
import java.util.TreeMap;
import org.json.JSONObject;

public class PerformanceStatisticSwitchMOAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return PerformanceStatisticSwitchMO.class;
    }
    
    public void testConstructor() throws Throwable {
        MO mo = new MO();
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO(mo);
        assertSame("performanceStatisticSwitchMO.getMO()", mo, performanceStatisticSwitchMO.getMO());
    }
    
    public void testConstructor1() throws Throwable {
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO();
        assertEquals("performanceStatisticSwitchMO.getMO().getProperties().size()", 0, performanceStatisticSwitchMO.getMO().getProperties().size());
    }
    
    public void testConstructor2() throws Throwable {
        JSONObject jObject = new JSONObject(new TreeMap());
        jObject.accumulate("testPerformanceStatisticSwitchMOKey", null);
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO(jObject);
        assertEquals("performanceStatisticSwitchMO.getMO().getProperties().size()", 0, performanceStatisticSwitchMO.getMO().getProperties().size());
    }
    
    public void testGetCmoPerformanceBeginTime() throws Throwable {
        MO mo = new MO();
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO(mo);
        performanceStatisticSwitchMO.setCmoPerformanceBeginTime("testPerformanceStatisticSwitchMOPerformanceBeginTime");
        String result = performanceStatisticSwitchMO.getCmoPerformanceBeginTime();
        assertEquals("result", "testPerformanceStatisticSwitchMOPerformanceBeginTime", result);
        assertSame("performanceStatisticSwitchMO.getMO()", mo, performanceStatisticSwitchMO.getMO());
    }
    
    public void testGetCmoPerformanceBeginTime1() throws Throwable {
        MO mo = new MO();
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO(mo);
        String result = performanceStatisticSwitchMO.getCmoPerformanceBeginTime();
        assertNull("result", result);
        assertSame("performanceStatisticSwitchMO.getMO()", mo, performanceStatisticSwitchMO.getMO());
    }
    
    public void testGetCmoPerformanceEndTime() throws Throwable {
        MO mo = (MO) Mockingbird.getProxyObject(MO.class);
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO(mo);
        Mockingbird.enterRecordingMode();
        Mockingbird.setReturnValue(mo.getProperty("CMO_PERFORMANCE_END_TIME"), "testString");
        Mockingbird.enterTestMode(PerformanceStatisticSwitchMO.class);
        String result = performanceStatisticSwitchMO.getCmoPerformanceEndTime();
        assertEquals("result", "testString", result);
        assertSame("performanceStatisticSwitchMO.getMO()", mo, performanceStatisticSwitchMO.getMO());
    }
    
    public void testGetCmoPerformanceEndTime1() throws Throwable {
        MO mo = new MO();
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO(mo);
        String result = performanceStatisticSwitchMO.getCmoPerformanceEndTime();
        assertNull("result", result);
        assertSame("performanceStatisticSwitchMO.getMO()", mo, performanceStatisticSwitchMO.getMO());
    }
    
    public void testGetCmoPerformanceSwitch() throws Throwable {
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO();
        String result = performanceStatisticSwitchMO.getCmoPerformanceSwitch();
        assertNull("result", result);
        assertEquals("performanceStatisticSwitchMO.getMO().getProperties().size()", 0, performanceStatisticSwitchMO.getMO().getProperties().size());
    }
    
    public void testGetCmoPerformanceSwitch1() throws Throwable {
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO();
        performanceStatisticSwitchMO.setCmoPerformanceSwitch("testPerformanceStatisticSwitchMOPerformanceSwitch");
        String result = performanceStatisticSwitchMO.getCmoPerformanceSwitch();
        assertEquals("result", "testPerformanceStatisticSwitchMOPerformanceSwitch", result);
        assertEquals("performanceStatisticSwitchMO.getMO().getProperties().size()", 1, performanceStatisticSwitchMO.getMO().getProperties().size());
    }
    
    public void testGetMO() throws Throwable {
        MO mo = new MO();
        MO result = new PerformanceStatisticSwitchMO(mo).getMO();
        assertSame("result", mo, result);
    }
    
    public void testSetCmoPerformanceBeginTime() throws Throwable {
        MO mo = new MO();
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO(mo);
        performanceStatisticSwitchMO.setCmoPerformanceBeginTime("testPerformanceStatisticSwitchMOPerformanceBeginTime");
        assertEquals("performanceStatisticSwitchMO.getMO().getProperties().size()", 1, performanceStatisticSwitchMO.getMO().getProperties().size());
        Object actual = performanceStatisticSwitchMO.getMO().getProperties().get("CMO_PERFORMANCE_BEGIN_TIME");
        assertEquals("performanceStatisticSwitchMO.getMO().getProperties().get(\"CMO_PERFORMANCE_BEGIN_TIME\")", "testPerformanceStatisticSwitchMOPerformanceBeginTime", actual);
        assertSame("performanceStatisticSwitchMO.getMO()", mo, performanceStatisticSwitchMO.getMO());
    }
    
    public void testSetCmoPerformanceEndTime() throws Throwable {
        MO mo = new MO();
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO(mo);
        performanceStatisticSwitchMO.setCmoPerformanceEndTime("testPerformanceStatisticSwitchMOPerformanceEndTime");
        assertEquals("performanceStatisticSwitchMO.getMO().getProperties().size()", 1, performanceStatisticSwitchMO.getMO().getProperties().size());
        Object actual = performanceStatisticSwitchMO.getMO().getProperties().get("CMO_PERFORMANCE_END_TIME");
        assertEquals("performanceStatisticSwitchMO.getMO().getProperties().get(\"CMO_PERFORMANCE_END_TIME\")", "testPerformanceStatisticSwitchMOPerformanceEndTime", actual);
        assertSame("performanceStatisticSwitchMO.getMO()", mo, performanceStatisticSwitchMO.getMO());
    }
    
    public void testSetCmoPerformanceSwitch() throws Throwable {
        MO mo = new MO();
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO(mo);
        performanceStatisticSwitchMO.setCmoPerformanceSwitch("testPerformanceStatisticSwitchMOPerformanceSwitch");
        assertEquals("performanceStatisticSwitchMO.getMO().getProperties().size()", 1, performanceStatisticSwitchMO.getMO().getProperties().size());
        Object actual = performanceStatisticSwitchMO.getMO().getProperties().get("CMO_PERFORMANCE_SWITCH");
        assertEquals("performanceStatisticSwitchMO.getMO().getProperties().get(\"CMO_PERFORMANCE_SWITCH\")", "testPerformanceStatisticSwitchMOPerformanceSwitch", actual);
        assertSame("performanceStatisticSwitchMO.getMO()", mo, performanceStatisticSwitchMO.getMO());
    }
    
    public void testGetCmoPerformanceBeginTimeThrowsNullPointerException() throws Throwable {
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO((MO) null);
        try {
            performanceStatisticSwitchMO.getCmoPerformanceBeginTime();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(PerformanceStatisticSwitchMO.class, ex);
            assertNull("performanceStatisticSwitchMO.getMO()", performanceStatisticSwitchMO.getMO());
        }
    }
    
    public void testGetCmoPerformanceEndTimeThrowsNullPointerException() throws Throwable {
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO((MO) null);
        try {
            performanceStatisticSwitchMO.getCmoPerformanceEndTime();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(PerformanceStatisticSwitchMO.class, ex);
            assertNull("performanceStatisticSwitchMO.getMO()", performanceStatisticSwitchMO.getMO());
        }
    }
    
    public void testGetCmoPerformanceSwitchThrowsNullPointerException() throws Throwable {
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO((MO) null);
        try {
            performanceStatisticSwitchMO.getCmoPerformanceSwitch();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(PerformanceStatisticSwitchMO.class, ex);
            assertNull("performanceStatisticSwitchMO.getMO()", performanceStatisticSwitchMO.getMO());
        }
    }
    
    public void testSetCmoPerformanceBeginTimeThrowsNullPointerException() throws Throwable {
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO((MO) null);
        try {
            performanceStatisticSwitchMO.setCmoPerformanceBeginTime("testPerformanceStatisticSwitchMOPerformanceBeginTime");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(PerformanceStatisticSwitchMO.class, ex);
            assertNull("performanceStatisticSwitchMO.getMO()", performanceStatisticSwitchMO.getMO());
        }
    }
    
    public void testSetCmoPerformanceEndTimeThrowsNullPointerException() throws Throwable {
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO((MO) null);
        try {
            performanceStatisticSwitchMO.setCmoPerformanceEndTime("testPerformanceStatisticSwitchMOPerformanceEndTime");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(PerformanceStatisticSwitchMO.class, ex);
            assertNull("performanceStatisticSwitchMO.getMO()", performanceStatisticSwitchMO.getMO());
        }
    }
    
    public void testSetCmoPerformanceSwitchThrowsNullPointerException() throws Throwable {
        PerformanceStatisticSwitchMO performanceStatisticSwitchMO = new PerformanceStatisticSwitchMO((MO) null);
        try {
            performanceStatisticSwitchMO.setCmoPerformanceSwitch("testPerformanceStatisticSwitchMOPerformanceSwitch");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(PerformanceStatisticSwitchMO.class, ex);
            assertNull("performanceStatisticSwitchMO.getMO()", performanceStatisticSwitchMO.getMO());
        }
    }
}

