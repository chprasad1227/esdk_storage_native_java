/**
 * Generated by Agitar build: AgitarOne Version 6.0.0.000018 (Build date: Sep 06, 2013) [6.0.0.000018]
 * JDK Version: 1.6.0_14
 *
 * Generated on 2014-3-11 13:32:00
 * Time to generate: 00:13.813 seconds
 *
 *
 * agitar.src.md5=com.huawei.ism.openapi.hostgroup.HostGroupMO:d0d9e68e6ca836e3d2bc8b6bfa900dfb
 *
 */

package com.huawei.ism.openapi.hostgroup;

import com.agitar.lib.junit.AgitarTestCase;
import com.huawei.ism.openapi.common.model.MO;
import org.json.JSONObject;

public class HostGroupMOAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return HostGroupMO.class;
    }
    
    public void testConstructor() throws Throwable {
        HostGroupMO hostGroupMO = new HostGroupMO();
        assertEquals("hostGroupMO.getMO().getProperties().size()", 1, hostGroupMO.getMO().getProperties().size());
    }
    
    public void testConstructor1() throws Throwable {
        HostGroupMO hostGroupMO = new HostGroupMO(new JSONObject());
        assertEquals("hostGroupMO.getMO().getProperties().size()", 0, hostGroupMO.getMO().getProperties().size());
    }
    
    public void testGetDescription() throws Throwable {
        HostGroupMO hostGroupMO = new HostGroupMO();
        hostGroupMO.setDescription("testHostGroupMODescription");
        String result = hostGroupMO.getDescription();
        assertEquals("result", "testHostGroupMODescription", result);
        assertEquals("hostGroupMO.getMO().getProperties().size()", 2, hostGroupMO.getMO().getProperties().size());
    }
    
    public void testGetDescription1() throws Throwable {
        HostGroupMO hostGroupMO = new HostGroupMO();
        String result = hostGroupMO.getDescription();
        assertNull("result", result);
        assertEquals("hostGroupMO.getMO().getProperties().size()", 1, hostGroupMO.getMO().getProperties().size());
    }
    
    public void testGetId() throws Throwable {
        HostGroupMO hostGroupMO = new HostGroupMO();
        hostGroupMO.setId("testHostGroupMOId");
        String result = hostGroupMO.getId();
        assertEquals("result", "testHostGroupMOId", result);
        assertEquals("hostGroupMO.getMO().getProperties().size()", 2, hostGroupMO.getMO().getProperties().size());
    }
    
    public void testGetId1() throws Throwable {
        HostGroupMO hostGroupMO = new HostGroupMO();
        String result = hostGroupMO.getId();
        assertNull("result", result);
        assertEquals("hostGroupMO.getMO().getProperties().size()", 1, hostGroupMO.getMO().getProperties().size());
    }
    
    public void testGetMO() throws Throwable {
        MO result = new HostGroupMO().getMO();
        assertEquals("result.getProperties().size()", 1, result.getProperties().size());
    }
    
    public void testGetName() throws Throwable {
        HostGroupMO hostGroupMO = new HostGroupMO();
        String result = hostGroupMO.getName();
        assertNull("result", result);
        assertEquals("hostGroupMO.getMO().getProperties().size()", 1, hostGroupMO.getMO().getProperties().size());
    }
    
    public void testGetName1() throws Throwable {
        HostGroupMO hostGroupMO = new HostGroupMO();
        hostGroupMO.setName("testHostGroupMOName");
        String result = hostGroupMO.getName();
        assertEquals("result", "testHostGroupMOName", result);
        assertEquals("hostGroupMO.getMO().getProperties().size()", 2, hostGroupMO.getMO().getProperties().size());
    }
    
    public void testSetDescription() throws Throwable {
        HostGroupMO hostGroupMO = new HostGroupMO();
        hostGroupMO.setDescription("testHostGroupMODescription");
        assertEquals("hostGroupMO.getMO().getProperties().size()", 2, hostGroupMO.getMO().getProperties().size());
        assertEquals("hostGroupMO.getMO().getProperties().get(\"DESCRIPTION\")", "testHostGroupMODescription", hostGroupMO.getMO().getProperties().get("DESCRIPTION"));
        assertEquals("hostGroupMO.getMO().getProperties().size()", 2, hostGroupMO.getMO().getProperties().size());
    }
    
    public void testSetId() throws Throwable {
        HostGroupMO hostGroupMO = new HostGroupMO(new JSONObject());
        hostGroupMO.setId("testHostGroupMOId");
        assertEquals("hostGroupMO.getMO().getProperties().size()", 1, hostGroupMO.getMO().getProperties().size());
        assertEquals("hostGroupMO.getMO().getProperties().get(\"ID\")", "testHostGroupMOId", hostGroupMO.getMO().getProperties().get("ID"));
        assertEquals("hostGroupMO.getMO().getProperties().size()", 1, hostGroupMO.getMO().getProperties().size());
    }
    
    public void testSetName() throws Throwable {
        HostGroupMO hostGroupMO = new HostGroupMO();
        hostGroupMO.setName("testHostGroupMOName");
        assertEquals("hostGroupMO.getMO().getProperties().size()", 2, hostGroupMO.getMO().getProperties().size());
        assertEquals("hostGroupMO.getMO().getProperties().get(\"NAME\")", "testHostGroupMOName", hostGroupMO.getMO().getProperties().get("NAME"));
        assertEquals("hostGroupMO.getMO().getProperties().size()", 2, hostGroupMO.getMO().getProperties().size());
    }
    
    public void testSetDescriptionThrowsNullPointerException() throws Throwable {
        HostGroupMO hostGroupMO = new HostGroupMO();
        try {
            hostGroupMO.setDescription(null);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertEquals("hostGroupMO.getMO().getProperties().size()", 1, hostGroupMO.getMO().getProperties().size());
        }
    }
    
    public void testSetIdThrowsNullPointerException() throws Throwable {
        HostGroupMO hostGroupMO = new HostGroupMO();
        try {
            hostGroupMO.setId(null);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertEquals("hostGroupMO.getMO().getProperties().size()", 1, hostGroupMO.getMO().getProperties().size());
        }
    }
    
    public void testSetNameThrowsNullPointerException() throws Throwable {
        HostGroupMO hostGroupMO = new HostGroupMO();
        try {
            hostGroupMO.setName(null);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertEquals("hostGroupMO.getMO().getProperties().size()", 1, hostGroupMO.getMO().getProperties().size());
        }
    }
}

